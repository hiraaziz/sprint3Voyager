{
  "Resources": {
    "exampleiamroleABFDED29": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "An example IAM role in AWS CDK",
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/CloudWatchFullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonDynamoDBFullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonAPIGatewayInvokeFullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonAPIGatewayAdministrator"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hirapiplelinestack/betastage/HiraStack/example-iam-role/Resource"
      }
    },
    "MyLayer38944FA5": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "1f1893c20f318e5714ac353ae83c4cb03f97ce943244746e0f5f9c36dd6d217c.zip"
        },
        "CompatibleRuntimes": [
          "nodejs14.x"
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "Hirapiplelinestack/betastage/HiraStack/MyLayer/Resource",
        "aws:asset:path": "..\\asset.1f1893c20f318e5714ac353ae83c4cb03f97ce943244746e0f5f9c36dd6d217c",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Content"
      }
    },
    "apilambda17748974": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "ab2f9fd952065bb7e8e0ed1449f0600389954ca3f49ff91303d44e801bfbecb3.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "exampleiamroleABFDED29",
            "Arn"
          ]
        },
        "Handler": "api_lambda.handler",
        "Layers": [
          {
            "Ref": "MyLayer38944FA5"
          }
        ],
        "Runtime": "nodejs14.x",
        "Timeout": 300
      },
      "DependsOn": [
        "exampleiamroleABFDED29"
      ],
      "Metadata": {
        "aws:cdk:path": "Hirapiplelinestack/betastage/HiraStack/api_lambda/Resource",
        "aws:asset:path": "..\\asset.ab2f9fd952065bb7e8e0ed1449f0600389954ca3f49ff91303d44e801bfbecb3",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "myapi162F20B8": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "myapi"
      },
      "Metadata": {
        "aws:cdk:path": "Hirapiplelinestack/betastage/HiraStack/myapi/Resource"
      }
    },
    "myapiCloudWatchRoleEB425128": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hirapiplelinestack/betastage/HiraStack/myapi/CloudWatchRole/Resource"
      }
    },
    "myapiAccountC3A4750C": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "myapiCloudWatchRoleEB425128",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "myapi162F20B8"
      ],
      "Metadata": {
        "aws:cdk:path": "Hirapiplelinestack/betastage/HiraStack/myapi/Account"
      }
    },
    "myapiDeploymentB7EF8EB7898001172f1bbf830fb813efcef5d16c": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "myapi162F20B8"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "myapiproxyANYDD7FCE64",
        "myapiproxyB6DF4575",
        "myapiANY111D56B7"
      ],
      "Metadata": {
        "aws:cdk:path": "Hirapiplelinestack/betastage/HiraStack/myapi/Deployment/Resource"
      }
    },
    "myapiDeploymentStageprod329F21FF": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "myapi162F20B8"
        },
        "DeploymentId": {
          "Ref": "myapiDeploymentB7EF8EB7898001172f1bbf830fb813efcef5d16c"
        },
        "StageName": "prod"
      },
      "DependsOn": [
        "myapiAccountC3A4750C"
      ],
      "Metadata": {
        "aws:cdk:path": "Hirapiplelinestack/betastage/HiraStack/myapi/DeploymentStage.prod/Resource"
      }
    },
    "myapiproxyB6DF4575": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "myapi162F20B8",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "myapi162F20B8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hirapiplelinestack/betastage/HiraStack/myapi/Default/{proxy+}/Resource"
      }
    },
    "myapiproxyANYApiPermissionHirapiplelinestackbetastageHiraStackmyapi50F25B33ANYproxyF50DA0ED": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "apilambda17748974",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "myapi162F20B8"
              },
              "/",
              {
                "Ref": "myapiDeploymentStageprod329F21FF"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hirapiplelinestack/betastage/HiraStack/myapi/Default/{proxy+}/ANY/ApiPermission.HirapiplelinestackbetastageHiraStackmyapi50F25B33.ANY..{proxy+}"
      }
    },
    "myapiproxyANYApiPermissionTestHirapiplelinestackbetastageHiraStackmyapi50F25B33ANYproxyDA627075": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "apilambda17748974",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "myapi162F20B8"
              },
              "/test-invoke-stage/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hirapiplelinestack/betastage/HiraStack/myapi/Default/{proxy+}/ANY/ApiPermission.Test.HirapiplelinestackbetastageHiraStackmyapi50F25B33.ANY..{proxy+}"
      }
    },
    "myapiproxyANYDD7FCE64": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Ref": "myapiproxyB6DF4575"
        },
        "RestApiId": {
          "Ref": "myapi162F20B8"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "apilambda17748974",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hirapiplelinestack/betastage/HiraStack/myapi/Default/{proxy+}/ANY/Resource"
      }
    },
    "myapiANYApiPermissionHirapiplelinestackbetastageHiraStackmyapi50F25B33ANYE5EC29C2": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "apilambda17748974",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "myapi162F20B8"
              },
              "/",
              {
                "Ref": "myapiDeploymentStageprod329F21FF"
              },
              "/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hirapiplelinestack/betastage/HiraStack/myapi/Default/ANY/ApiPermission.HirapiplelinestackbetastageHiraStackmyapi50F25B33.ANY.."
      }
    },
    "myapiANYApiPermissionTestHirapiplelinestackbetastageHiraStackmyapi50F25B33ANYC0899928": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "apilambda17748974",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "myapi162F20B8"
              },
              "/test-invoke-stage/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hirapiplelinestack/betastage/HiraStack/myapi/Default/ANY/ApiPermission.Test.HirapiplelinestackbetastageHiraStackmyapi50F25B33.ANY.."
      }
    },
    "myapiANY111D56B7": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Fn::GetAtt": [
            "myapi162F20B8",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "myapi162F20B8"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "apilambda17748974",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hirapiplelinestack/betastage/HiraStack/myapi/Default/ANY/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WQTU/DMAyGfwv3NFC+7t0Qp01MReI6eakpXtukih1GVfW/k7RDbCc/fh3br3Ov8yd9dwMnzkzVZC0d9PguYBoVpf1I0OmxdC2q9adNcVItdIcK9LiBAf0HeiZnU/Uqfw3WyLlwyTv0HXF6Mil+2AMzCusihZjrVTANygoYFfRUg+AJhrQqrSyRpehpdvKPhTEuWFEv2Ldu6DBiVC+yeE09218gtrrgDc5Ldt79DH/KefDCW5QvVyVpoWlSs8s0hGydCm9B+iBXXZHXzlYk84HWVaiPfPudP+v8Mf7ykYkyH91Sh7pc4i9WkpiCgQEAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "Hirapiplelinestack/betastage/HiraStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "myapiEndpoint8EB17201": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "myapi162F20B8"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "myapiDeploymentStageprod329F21FF"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}