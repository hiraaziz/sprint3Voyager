{
  "Resources": {
    "exampleiamroleABFDED29": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "An example IAM role in AWS CDK",
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/CloudWatchFullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonDynamoDBFullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AWSLambdaInvocation-DynamoDB"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/example-iam-role/Resource"
      }
    },
    "exampleiamroleDefaultPolicyB15F295B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "hiraTable28D8DFD1",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:us-east-1:",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "hiraTable28D8DFD1"
                      }
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "exampleiamroleDefaultPolicyB15F295B",
        "Roles": [
          {
            "Ref": "exampleiamroleABFDED29"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/example-iam-role/DefaultPolicy/Resource"
      }
    },
    "s3buckethiraE0442F2E": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "PublicRead",
        "Tags": [
          {
            "Key": "aws-cdk:cr-owned:317455e5",
            "Value": "true"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/s3_buckethira/Resource"
      }
    },
    "DeployWebsiteAwsCliLayer17DBC421": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "391a62714930dde9689f73f04bec0cd78494b9d9b7167446e54c6c939bbbb6b4.zip"
        },
        "Description": "/opt/awscli/aws"
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/DeployWebsite/AwsCliLayer/Resource",
        "aws:asset:path": "..\\asset.391a62714930dde9689f73f04bec0cd78494b9d9b7167446e54c6c939bbbb6b4.zip",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Content"
      }
    },
    "DeployWebsiteCustomResourceD116527B": {
      "Type": "Custom::CDKBucketDeployment",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn"
          ]
        },
        "SourceBucketNames": [
          {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          }
        ],
        "SourceObjectKeys": [
          "cda3dc8689240ea4f034de198cf4ce543d32b062c7b266963ef65e5a4e43d713.zip"
        ],
        "DestinationBucketName": {
          "Ref": "s3buckethiraE0442F2E"
        },
        "Prune": true
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/DeployWebsite/CustomResource/Default"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "s3buckethiraE0442F2E",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "s3buckethiraE0442F2E",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "f98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711da.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "DeployWebsiteAwsCliLayer17DBC421"
          }
        ],
        "Runtime": "python3.7",
        "Timeout": 900
      },
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
      ],
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
        "aws:asset:path": "..\\asset.f98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711da",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "WebHealthLambdaB270CBD9": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "cda3dc8689240ea4f034de198cf4ce543d32b062c7b266963ef65e5a4e43d713.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "exampleiamroleABFDED29",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "table_name": {
              "Ref": "s3buckethiraE0442F2E"
            }
          }
        },
        "Handler": "webHealthLambda.webhandler",
        "Runtime": "nodejs14.x",
        "Timeout": 180
      },
      "DependsOn": [
        "exampleiamroleDefaultPolicyB15F295B",
        "exampleiamroleABFDED29"
      ],
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/WebHealthLambda/Resource",
        "aws:asset:path": "..\\asset.cda3dc8689240ea4f034de198cf4ce543d32b062c7b266963ef65e5a4e43d713",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "Rule4C995B7F": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "WebHealthLambdaB270CBD9",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/Rule/Resource"
      }
    },
    "RuleAllowEventRuleHira4SprintStackprodHiraStackWebHealthLambda36A952CB6F775D6D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "WebHealthLambdaB270CBD9",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Rule4C995B7F",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/Rule/AllowEventRuleHira4SprintStackprodHiraStackWebHealthLambda36A952CB"
      }
    },
    "MyTopic86869434": {
      "Type": "AWS::SNS::Topic",
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/MyTopic/Resource"
      }
    },
    "MyTopichiraaziz1998gmailcom2E3C6968": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "email",
        "TopicArn": {
          "Ref": "MyTopic86869434"
        },
        "Endpoint": "hiraaziz1998@gmail.com"
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/MyTopic/hiraaziz1998@gmail.com/Resource"
      }
    },
    "availabilityalarmhttpwwwgooglecom97E3871F": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Ref": "MyTopic86869434"
          }
        ],
        "AlarmDescription": "Alarm if the SUM of Errors is greater than or equal to the threshold (1) for 1 evaluation period",
        "Dimensions": [
          {
            "Name": "URL",
            "Value": "http://www.google.com/"
          }
        ],
        "MetricName": "Availabilty",
        "Namespace": "Hira_Aziz_Sprint4",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 1
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/availability_alarmhttp:----www.google.com--/Resource"
      }
    },
    "Latencyalarmhttpwwwgooglecom9CC5EA58": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Ref": "MyTopic86869434"
          }
        ],
        "AlarmDescription": "Alarm if the SUM of Errors is greater than or equal to the threshold (1) for 1 evaluation period",
        "Dimensions": [
          {
            "Name": "URL",
            "Value": "http://www.google.com/"
          }
        ],
        "MetricName": "Latency",
        "Namespace": "Hira_Aziz_Sprint4",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0.4
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/Latency_alarmhttp:----www.google.com--/Resource"
      }
    },
    "availabilityalarmhttpwwwyoutubecomB9E04592": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Ref": "MyTopic86869434"
          }
        ],
        "AlarmDescription": "Alarm if the SUM of Errors is greater than or equal to the threshold (1) for 1 evaluation period",
        "Dimensions": [
          {
            "Name": "URL",
            "Value": "http://www.youtube.com/"
          }
        ],
        "MetricName": "Availabilty",
        "Namespace": "Hira_Aziz_Sprint4",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 1
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/availability_alarmhttp:----www.youtube.com--/Resource"
      }
    },
    "Latencyalarmhttpwwwyoutubecom1431C397": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Ref": "MyTopic86869434"
          }
        ],
        "AlarmDescription": "Alarm if the SUM of Errors is greater than or equal to the threshold (1) for 1 evaluation period",
        "Dimensions": [
          {
            "Name": "URL",
            "Value": "http://www.youtube.com/"
          }
        ],
        "MetricName": "Latency",
        "Namespace": "Hira_Aziz_Sprint4",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0.4
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/Latency_alarmhttp:----www.youtube.com--/Resource"
      }
    },
    "availabilityalarmhttpwwwfacebookcom7A8C3A25": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Ref": "MyTopic86869434"
          }
        ],
        "AlarmDescription": "Alarm if the SUM of Errors is greater than or equal to the threshold (1) for 1 evaluation period",
        "Dimensions": [
          {
            "Name": "URL",
            "Value": "http://www.facebook.com/"
          }
        ],
        "MetricName": "Availabilty",
        "Namespace": "Hira_Aziz_Sprint4",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 1
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/availability_alarmhttp:----www.facebook.com--/Resource"
      }
    },
    "LatencyalarmhttpwwwfacebookcomDBC5BB63": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Ref": "MyTopic86869434"
          }
        ],
        "AlarmDescription": "Alarm if the SUM of Errors is greater than or equal to the threshold (1) for 1 evaluation period",
        "Dimensions": [
          {
            "Name": "URL",
            "Value": "http://www.facebook.com/"
          }
        ],
        "MetricName": "Latency",
        "Namespace": "Hira_Aziz_Sprint4",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0.4
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/Latency_alarmhttp:----www.facebook.com--/Resource"
      }
    },
    "availabilityalarmhttpwwwskipqcom1A73432D": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Ref": "MyTopic86869434"
          }
        ],
        "AlarmDescription": "Alarm if the SUM of Errors is greater than or equal to the threshold (1) for 1 evaluation period",
        "Dimensions": [
          {
            "Name": "URL",
            "Value": "http://www.skipq.com/"
          }
        ],
        "MetricName": "Availabilty",
        "Namespace": "Hira_Aziz_Sprint4",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 1
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/availability_alarmhttp:----www.skipq.com--/Resource"
      }
    },
    "Latencyalarmhttpwwwskipqcom75752214": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Ref": "MyTopic86869434"
          }
        ],
        "AlarmDescription": "Alarm if the SUM of Errors is greater than or equal to the threshold (1) for 1 evaluation period",
        "Dimensions": [
          {
            "Name": "URL",
            "Value": "http://www.skipq.com/"
          }
        ],
        "MetricName": "Latency",
        "Namespace": "Hira_Aziz_Sprint4",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0.4
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/Latency_alarmhttp:----www.skipq.com--/Resource"
      }
    },
    "hiraTable28D8DFD1": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "hira_URL",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "hira_URL",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/hira_Table/Resource"
      }
    },
    "hiraTableSourceTableAttachedManagedPolicyHira4SprintStackprodHiraStackawscdkawsdynamodbReplicaProviderOnEventHandlerServiceRole8D42D089A1F8637D": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "hiraTable28D8DFD1",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":dynamodb:us-east-1:",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":table/",
                    {
                      "Ref": "hiraTable28D8DFD1"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "DynamoDB replication managed policy for table ",
              {
                "Ref": "hiraTable28D8DFD1"
              }
            ]
          ]
        },
        "Path": "/",
        "Roles": [
          {
            "Fn::GetAtt": [
              "awscdkawsdynamodbReplicaProviderNestedStackawscdkawsdynamodbReplicaProviderNestedStackResource18E3F12D",
              "Outputs.Hira4SprintStackprodHiraStackawscdkawsdynamodbReplicaProviderOnEventHandlerServiceRole291839C8Ref"
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/hira_Table/SourceTableAttachedManagedPolicy-Hira4SprintStackprodHiraStackawscdkawsdynamodbReplicaProviderOnEventHandlerServiceRole8D42D089/Resource/Resource"
      }
    },
    "hiraTableSourceTableAttachedManagedPolicyHira4SprintStackprodHiraStackawscdkawsdynamodbReplicaProviderIsCompleteHandlerServiceRoleA50F854CB0EB7837": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:DescribeTable",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "hiraTable28D8DFD1",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "DynamoDB replication managed policy for table ",
              {
                "Ref": "hiraTable28D8DFD1"
              }
            ]
          ]
        },
        "Path": "/",
        "Roles": [
          {
            "Fn::GetAtt": [
              "awscdkawsdynamodbReplicaProviderNestedStackawscdkawsdynamodbReplicaProviderNestedStackResource18E3F12D",
              "Outputs.Hira4SprintStackprodHiraStackawscdkawsdynamodbReplicaProviderIsCompleteHandlerServiceRole5192695BRef"
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/hira_Table/SourceTableAttachedManagedPolicy-Hira4SprintStackprodHiraStackawscdkawsdynamodbReplicaProviderIsCompleteHandlerServiceRoleA50F854C/Resource/Resource"
      }
    },
    "hiraTableReplicauseast1DB3611C5": {
      "Type": "Custom::DynamoDBReplica",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawsdynamodbReplicaProviderNestedStackawscdkawsdynamodbReplicaProviderNestedStackResource18E3F12D",
            "Outputs.Hira4SprintStackprodHiraStackawscdkawsdynamodbReplicaProviderframeworkonEvent9DB4BE1BArn"
          ]
        },
        "TableName": {
          "Ref": "hiraTable28D8DFD1"
        },
        "Region": "us-east-1"
      },
      "DependsOn": [
        "hiraTableSourceTableAttachedManagedPolicyHira4SprintStackprodHiraStackawscdkawsdynamodbReplicaProviderIsCompleteHandlerServiceRoleA50F854CB0EB7837",
        "hiraTableSourceTableAttachedManagedPolicyHira4SprintStackprodHiraStackawscdkawsdynamodbReplicaProviderOnEventHandlerServiceRole8D42D089A1F8637D"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/hira_Table/Replicaus-east-1/Default"
      },
      "Condition": "hiraTableStackRegionNotEqualsuseast124225D9A"
    },
    "awscdkawsdynamodbReplicaProviderNestedStackawscdkawsdynamodbReplicaProviderNestedStackResource18E3F12D": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.",
              {
                "Ref": "AWS::Region"
              },
              ".",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              {
                "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
              },
              "/a00a6d5a2102661e53d419fc6796bd169d5454ee8d0c65b3606fa3e825271c31.json"
            ]
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/@aws-cdk--aws-dynamodb.ReplicaProvider.NestedStack/@aws-cdk--aws-dynamodb.ReplicaProvider.NestedStackResource",
        "aws:asset:path": "Hira4SprintStackprodHiraStackawscdkawsdynamodbReplicaProvider750F5A6C.nested.template.json",
        "aws:asset:property": "TemplateURL"
      }
    },
    "DynamoLambda6C02E165": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "cda3dc8689240ea4f034de198cf4ce543d32b062c7b266963ef65e5a4e43d713.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "exampleiamroleABFDED29",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "table_name": {
              "Ref": "hiraTable28D8DFD1"
            }
          }
        },
        "Handler": "dynamodb.dynamohandler",
        "Runtime": "nodejs14.x",
        "Timeout": 180
      },
      "DependsOn": [
        "exampleiamroleDefaultPolicyB15F295B",
        "exampleiamroleABFDED29"
      ],
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/DynamoLambda/Resource",
        "aws:asset:path": "..\\asset.cda3dc8689240ea4f034de198cf4ce543d32b062c7b266963ef65e5a4e43d713",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "DynamoLambdaAllowInvokeHira4SprintStackprodHiraStackMyTopicD1F8B62FA40DCB6F": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DynamoLambda6C02E165",
            "Arn"
          ]
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "MyTopic86869434"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/DynamoLambda/AllowInvoke:Hira4SprintStackprodHiraStackMyTopicD1F8B62F"
      }
    },
    "DynamoLambdaMyTopic2B752C5B": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "MyTopic86869434"
        },
        "Endpoint": {
          "Fn::GetAtt": [
            "DynamoLambda6C02E165",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/DynamoLambda/MyTopic/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VRy24CMQz8lt5DWvq6w1Y9tRIC1Osqm7hbQx4oTkCrKP/eZBcoPc1k7Nge+5HPX/jDnTjRTKr9TGPH0yYIuWdFahMKw9PaaWDNtx1x5TTKoT7P7FNY0YP60/8JmdETT8so9xBq8MwmWAqCmtAmBQftBgM28Cn0dhWYIIJAfFEhMy1MpwRPpdaHGMB/gSd0lm3Q9hqCs+/RylCVKympt3wF3iDVT5nBsXSgYjGeLRYsE9kibd0BZdUmsokdSY+HS5Xbd2ZSu6hOIsgfnhZaeFNTRpKZGqwwTpXFbkU3tRlJvphpdTXSloVLjXxxokbj6I2Nnss5+mKONZGCM2sgF72cpr3wW7FxVuF1ynrKzKxTwHd0f5y/8vlzufeOEGc+2oAG+HrCX8sTfuYLAgAA"
      },
      "Metadata": {
        "aws:cdk:path": "Hira4SprintStack/prod/HiraStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Conditions": {
    "hiraTableStackRegionNotEqualsuseast124225D9A": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            "us-east-1",
            {
              "Ref": "AWS::Region"
            }
          ]
        }
      ]
    },
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}